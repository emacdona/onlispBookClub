#!/usr/bin/env ansible-playbook

---

- name: Install Nginx Ingress
  hosts: localhost
  become: false
  connection: local
  tasks:
    - name: Add Nginx Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://helm.nginx.com/stable
        name: nginx-stable
    - name: Install Nginx Ingress
      kubernetes.core.helm:
        name: nginx-ingress
        release_namespace: nginx-ingress
        create_namespace: true
        chart_ref: nginx-stable/nginx-ingress
        values: "{{ lookup('template', 'templates/nginxIngress/values.yml.j2') | from_yaml }}"

- name: Install Kubernetes Dashboard
  hosts: localhost
  become: false
  connection: local
  tags: dashboard
  tasks:
    - name: Add K8s Dashboard Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://kubernetes.github.io/dashboard/
        name: kubernetes-dashboard
    - name: Install K8s Dashboard
      kubernetes.core.helm:
        name: kubernetes-dashboard
        release_namespace: kubernetes-dashboard
        chart_ref: kubernetes-dashboard/kubernetes-dashboard
        create_namespace: true
        values: "{{ lookup('template', 'templates/dashboard/values.yml.j2') | from_yaml }}"

- name: Install Keycloak
  hosts: localhost
  become: false
  connection: local
  tags: keycloak
  tasks:
    - set_fact:
        image_registry:
          image:
            registry: "registry:{{k3d_registry_port}}"
    - name: Add Keycloack Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://charts.bitnami.com/bitnami
        name: bitnami
    - name: Install Keycloak
      kubernetes.core.helm:
        name: keycloak
        release_namespace: keycloak
        chart_ref: bitnami/keycloak
        chart_version: 7.1.18
        create_namespace: true
        values: "{{ lookup('template', 'templates/keycloak/values.yml.j2') | from_yaml | combine(image_registry, recursive=true) }}"

- name: Install Kube Prometheus Stack
  hosts: localhost
  become: false
  connection: local
  tags: prometheus
  tasks:
    - name: Add Kube Prometheus Stack
      kubernetes.core.helm_repository:
        repo_url: https://prometheus-community.github.io/helm-charts
        name: prometheus-community
    - name: Install Kube Prometheus Stack
      kubernetes.core.helm:
        name: prometheus
        release_namespace: prometheus
        create_namespace: true
        chart_ref: prometheus-community/kube-prometheus-stack
        values: "{{ lookup('template', 'templates/grafana/values.yml.j2') | from_yaml }}"

- name: Install Elasticsearch
  hosts: localhost
  become: false
  connection: local
  tags: elasticsearch
  tasks:
    - name: Add Elasticsearch Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://helm.elastic.co
        name: elastic
    - name: Install Elasticsearch
      kubernetes.core.helm:
        name: elasticsearch
        release_namespace: elasticsearch
        create_namespace: true
        chart_ref: elastic/elasticsearch
        values: "{{ lookup('template', 'templates/elasticsearch/values.yml.j2') | from_yaml }}"
    - name: Install Logstash
      kubernetes.core.helm:
        name: logstash
        release_namespace: elasticsearch
        create_namespace: true
        chart_ref: elastic/logstash
        values: "{{ lookup('template', 'templates/logstash/values.yml.j2') | from_yaml }}"
    - name: Install Kibana
      kubernetes.core.helm:
        name: kibana
        release_namespace: elasticsearch
        create_namespace: true
        chart_ref: elastic/kibana
        values: "{{ lookup('template', 'templates/kibana/values.yml.j2') | from_yaml }}"
    - name: Install Filebeat
      kubernetes.core.helm:
        name: filebeat
        release_namespace: elasticsearch
        create_namespace: true
        chart_ref: elastic/filebeat
        values: "{{ lookup('template', 'templates/filebeat/values.yml.j2') | from_yaml }}"

- name: Install Cassandra
  hosts: localhost
  become: false
  connection: local
  tags: cassandra
  tasks:
    - name: Add Cassandra Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://charts.bitnami.com/bitnami
        name: bitnami
    - name: Install Cassandra
      kubernetes.core.helm:
        name: cassandra
        release_namespace: cassandra
        create_namespace: true
        chart_ref: bitnami/cassandra
        values: "{{ lookup('template', 'templates/cassandra/values.yml.j2') | from_yaml }}"

- name: Install Mongodb
  hosts: localhost
  become: false
  connection: local
  tags: mongodb
  tasks:
    - name: Add Mongodb Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://charts.bitnami.com/bitnami
        name: bitnami
    - name: Install Mongodb
      kubernetes.core.helm:
        name: mongodb
        release_namespace: mongodb
        create_namespace: true
        chart_ref: bitnami/mongodb
        values: "{{ lookup('template', 'templates/mongodb/values.yml.j2') | from_yaml }}"

- name: Install Jenkins
  hosts: localhost
  become: false
  connection: local
  tags: jenkins
  tasks:
    - name: Add Jenkins Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://charts.jenkins.io
        name: jenkins
    - name: Install Jenkins
      kubernetes.core.helm:
        name: jenkins
        chart_version: 4.1.17
        release_namespace: jenkins
        create_namespace: true
        chart_ref: jenkins/jenkins
        values: "{{ lookup('template', 'templates/jenkins/values.yml.j2') | from_yaml }}"

- name: Install Gitlab
  hosts: localhost
  become: false
  connection: local
  tags: gitlab
  tasks:
    - name: Add Gitlab Chart Repo
      kubernetes.core.helm_repository:
        repo_url: https://charts.gitlab.io/
        name: gitlab
    - name: Create gitlab namespace
      kubernetes.core.k8s:
        name: gitlab
        api_version: v1
        kind: Namespace
        state: present
    - name: Create initial root password (instead of letting Gitlab create a random one)
      kubernetes.core.k8s:
        state: present
        namespace: gitlab
        definition:
          apiVersion: v1
          kind: Secret
          data:
            password: "{{ 'password' | b64encode }}"
          metadata:
            name: "gitlab-gitlab-initial-root-password"
    - name: Install Gitlab
      kubernetes.core.helm:
        name: gitlab
        release_namespace: gitlab
        create_namespace: true
        chart_ref: gitlab/gitlab
        timeout: 600s
        values_files:
          - "https://gitlab.com/gitlab-org/charts/gitlab/raw/master/examples/values-minikube.yaml"
        values: "{{ lookup('template', 'templates/gitlab/values.yml.j2') | from_yaml }}"

#- name: PV Test
#  hosts: localhost
#  become: false
#  connection: local
#  tags: pvtest
#  tasks:
#    - name: PV
#      kubernetes.core.k8s:
#        state: present
#        definition:
#          apiVersion: v1
#          kind: PersistentVolume
#          metadata:
#            name: task-pv-volume
#            labels:
#              type: local
#          spec:
#            storageClassName: manual
#            capacity:
#              storage: 1Gi
#            accessModes:
#              - ReadWriteOnce
#            hostPath:
#              path: "/tmp/k3dvol"
#
#    - name: PVC
#      kubernetes.core.k8s:
#        state: present
#        definition:
#          apiVersion: v1
#          kind: PersistentVolumeClaim
#          metadata:
#            name: task-pv-claim
#          spec:
#            storageClassName: manual
#            accessModes:
#              - ReadWriteOnce
#            resources:
#              requests:
#                storage: 1Gi
#    - name: PV
#      kubernetes.core.k8s:
#        state: present
#        definition:
#          apiVersion: apps/v1
#          kind: Deployment
#          metadata:
#            name: echo
#          spec:
#            selector:
#              matchLabels:
#                app: echo
#            strategy:
#              type: Recreate
#            template:
#              metadata:
#                labels:
#                  app: echo
#              spec:
#                volumes:
#                  - name: task-pv-storage
#                    persistentVolumeClaim:
#                      claimName: task-pv-claim
#                containers:
#                  - image: busybox
#                    name: echo
#                    volumeMounts:
#                      - mountPath: "/data"
#                        name: task-pv-storage
#                    command: [ "ping", "127.0.0.1" ]
